<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<testCase failureBehaviour="Continue" id="4">
  <summary/>
  <steps>
    <apiCall apiId="com.provar.plugins.forcedotcom.core.testapis.ApexConnect" name="ApexConnect" testItemId="1" title="Salesforce Connect: Regtest (Folder)">
      <arguments>
        <argument id="connectionName">
          <value class="value" valueClass="string">Regtest</value>
        </argument>
        <argument id="resultName">
          <value class="value" valueClass="string">Regtest</value>
        </argument>
        <argument id="resultScope">
          <value class="value" valueClass="string">Folder</value>
        </argument>
        <argument id="uiApplicationName">
          <value class="value" valueClass="string">FieldService</value>
        </argument>
        <argument id="quickUiLogin">
          <value class="value" valueClass="boolean">true</value>
        </argument>
        <argument id="closeAllPrimaryTabs">
          <value class="value" valueClass="boolean">true</value>
        </argument>
        <argument id="reuseConnectionName"/>
        <argument id="alreadyOpenBehaviour">
          <value class="value" valueClass="string">Reopen</value>
        </argument>
        <argument id="privateBrowsingMode"/>
        <argument id="enableObjectIdLogging">
          <value class="value" valueClass="boolean">true</value>
        </argument>
        <argument id="autoCleanup">
          <value class="value" valueClass="boolean">true</value>
        </argument>
        <argument id="cleanupConnectionName"/>
        <argument id="logFileLocation"/>
        <argument id="username"/>
        <argument id="password"/>
        <argument id="securityToken"/>
        <argument id="environment"/>
        <argument id="lightningMode">
          <value class="value" valueClass="string">enable</value>
        </argument>
        <argument id="webBrowser"/>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.control.SetValues" name="SetValues" testItemId="18" title="Set Values: ActualTravelTime">
      <arguments>
        <argument id="values">
          <value class="valueList" mutable="Mutable">
            <namedValues mutable="Mutable">
              <namedValue name="valuePath">
                <value class="value" valueClass="string">AccountName</value>
              </namedValue>
              <namedValue name="value">
                <value class="compound">
                  <parts>
                    <value valueClass="string">acc</value>
                    <funcCall id="UniqueId">
                      <argument id="length">
                        <value class="value" valueClass="decimal">3</value>
                      </argument>
                    </funcCall>
                  </parts>
                </value>
              </namedValue>
              <namedValue name="valueScope">
                <value class="value" valueClass="string">Test</value>
              </namedValue>
            </namedValues>
            <namedValues mutable="Mutable">
              <namedValue name="valuePath">
                <value class="value" valueClass="string">EarliestStartDate</value>
              </namedValue>
              <namedValue name="value">
                <value class="compound">
                  <parts>
                    <funcCall id="DateFormat">
                      <argument id="date">
                        <value class="funcCall" id="DateAdd">
                          <argument id="date">
                            <value class="variable">
                              <path element="TODAY"/>
                            </value>
                          </argument>
                        </value>
                      </argument>
                      <argument id="outputFormat">
                        <value class="value" valueClass="string"> dd/MM/yyyy</value>
                      </argument>
                    </funcCall>
                    <value valueClass="string"> 11:00</value>
                  </parts>
                </value>
              </namedValue>
              <namedValue name="valueScope">
                <value class="value" valueClass="string">Test</value>
              </namedValue>
            </namedValues>
            <namedValues mutable="Mutable">
              <namedValue name="valuePath">
                <value class="value" valueClass="string">DueDate</value>
              </namedValue>
              <namedValue name="value">
                <value class="compound">
                  <parts>
                    <funcCall id="DateFormat">
                      <argument id="date">
                        <value class="funcCall" id="DateAdd">
                          <argument id="date">
                            <value class="variable">
                              <path element="TODAY"/>
                            </value>
                          </argument>
                        </value>
                      </argument>
                      <argument id="outputFormat">
                        <value class="value" valueClass="string"> dd/MM/yyyy</value>
                      </argument>
                    </funcCall>
                    <value valueClass="string"> 11:30</value>
                  </parts>
                </value>
              </namedValue>
              <namedValue name="valueScope">
                <value class="value" valueClass="string">Test</value>
              </namedValue>
            </namedValues>
            <namedValues mutable="Mutable">
              <namedValue name="valuePath">
                <value class="value" valueClass="string">ActualStartDate</value>
              </namedValue>
              <namedValue name="value">
                <value class="compound">
                  <parts>
                    <funcCall id="DateFormat">
                      <argument id="date">
                        <value class="funcCall" id="DateAdd">
                          <argument id="date">
                            <value class="variable">
                              <path element="TODAY"/>
                            </value>
                          </argument>
                        </value>
                      </argument>
                      <argument id="outputFormat">
                        <value class="value" valueClass="string"> dd/MM/yyyy</value>
                      </argument>
                    </funcCall>
                    <value valueClass="string"> 11:00</value>
                  </parts>
                </value>
              </namedValue>
              <namedValue name="valueScope">
                <value class="value" valueClass="string">Test</value>
              </namedValue>
            </namedValues>
            <namedValues mutable="Mutable">
              <namedValue name="valuePath">
                <value class="value" valueClass="string">ActualEndDate</value>
              </namedValue>
              <namedValue name="value">
                <value class="compound">
                  <parts>
                    <funcCall id="DateFormat">
                      <argument id="date">
                        <value class="funcCall" id="DateAdd">
                          <argument id="date">
                            <value class="variable">
                              <path element="TODAY"/>
                            </value>
                          </argument>
                        </value>
                      </argument>
                      <argument id="outputFormat">
                        <value class="value" valueClass="string"> dd/MM/yyyy</value>
                      </argument>
                    </funcCall>
                    <value valueClass="string"> 11:30</value>
                  </parts>
                </value>
              </namedValue>
              <namedValue name="valueScope">
                <value class="value" valueClass="string">Test</value>
              </namedValue>
            </namedValues>
            <namedValues mutable="Mutable">
              <namedValue name="valuePath">
                <value class="value" valueClass="string">EstimatedTravelTime</value>
              </namedValue>
              <namedValue name="value">
                <value class="value" valueClass="string">50.00</value>
              </namedValue>
              <namedValue name="valueScope">
                <value class="value" valueClass="string">Test</value>
              </namedValue>
            </namedValues>
            <namedValues mutable="Mutable">
              <namedValue name="valuePath">
                <value class="value" valueClass="string">ActualTravelTime</value>
              </namedValue>
              <namedValue name="value">
                <value class="value" valueClass="string">30.00</value>
              </namedValue>
              <namedValue name="valueScope">
                <value class="value" valueClass="string">Test</value>
              </namedValue>
            </namedValues>
          </value>
        </argument>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.If" name="If" testItemId="202" title="If: {GetSelectedEnvironment() = &quot;&lt;default&gt;&quot;}">
      <arguments>
        <argument id="condition">
          <value class="eq">
            <lhs class="funcCall" id="GetSelectedEnvironment"/>
            <rhs class="value" valueClass="string">&lt;default&gt;</rhs>
          </value>
        </argument>
      </arguments>
      <clauses>
        <clause name="then" testItemId="203">
          <steps>
            <apiCall apiId="com.provar.plugins.bundled.apis.control.SetValues" isTitleUpdated="true" name="SetValues" testItemId="206" title="Set Regtest Values: ServiceResourceId">
              <arguments>
                <argument id="values">
                  <value class="valueList" mutable="Mutable">
                    <namedValues mutable="Mutable">
                      <namedValue name="valuePath">
                        <value class="value" valueClass="string">ServiceResourceName</value>
                      </namedValue>
                      <namedValue name="value">
                        <value class="value" valueClass="string">John Paul</value>
                      </namedValue>
                      <namedValue name="valueScope">
                        <value class="value" valueClass="string">Test</value>
                      </namedValue>
                    </namedValues>
                    <namedValues mutable="Mutable">
                      <namedValue name="valuePath">
                        <value class="value" valueClass="string">ServiceResourceId</value>
                      </namedValue>
                      <namedValue name="value">
                        <value class="value" valueClass="string">0Hn0N000000XrbRSAS</value>
                      </namedValue>
                      <namedValue name="valueScope">
                        <value class="value" valueClass="string">Test</value>
                      </namedValue>
                    </namedValues>
                  </value>
                </argument>
              </arguments>
            </apiCall>
          </steps>
        </clause>
        <clause name="else" testItemId="204">
          <steps>
            <apiCall apiId="com.provar.plugins.bundled.apis.control.SetValues" name="SetValues" testItemId="208" title="Set Values: ServiceResourceId">
              <arguments>
                <argument id="values">
                  <value class="valueList" mutable="Mutable">
                    <namedValues mutable="Mutable">
                      <namedValue name="valuePath">
                        <value class="value" valueClass="string">ServiceResourceName</value>
                      </namedValue>
                      <namedValue name="value">
                        <value class="value" valueClass="string">Ashish Yadav</value>
                      </namedValue>
                      <namedValue name="valueScope">
                        <value class="value" valueClass="string">Test</value>
                      </namedValue>
                    </namedValues>
                    <namedValues mutable="Mutable">
                      <namedValue name="valuePath">
                        <value class="value" valueClass="string">ServiceResourceId</value>
                      </namedValue>
                      <namedValue name="value">
                        <value class="value" valueClass="string">0Hn4J0000008StcSAE</value>
                      </namedValue>
                      <namedValue name="valueScope">
                        <value class="value" valueClass="string">Test</value>
                      </namedValue>
                    </namedValues>
                  </value>
                </argument>
              </arguments>
            </apiCall>
          </steps>
        </clause>
      </clauses>
    </apiCall>
    <apiCall apiId="com.provar.plugins.forcedotcom.core.testapis.ApexCreateObject" name="ApexCreateObject" parameterGeneratorUri="command:com.provar.plugins.forcedotcom.ui.commands.CreateCustomObjectTestStepCommand" testItemId="14" title="Create Object: Account=&gt;AccountId">
      <arguments>
        <argument id="objectType">
          <value class="value" valueClass="string">Account</value>
        </argument>
        <argument id="resultIdName">
          <value class="value" valueClass="string">AccountId</value>
        </argument>
        <argument id="apexConnectionName">
          <value class="value" valueClass="string">Regtest</value>
        </argument>
        <argument id="assignmentRuleId"/>
        <argument id="resultScope">
          <value class="value" valueClass="string">Test</value>
        </argument>
        <argument id="Name">
          <value class="variable">
            <path element="AccountName"/>
          </value>
        </argument>
      </arguments>
      <parameterGeneratorProperties>
        <propertyValue name="com.provar.plugins.forcedotcom.ui.commands.CreateCustomObjectTestStepCommand.ConnectionName">Regmain</propertyValue>
        <propertyValue name="com.provar.plugins.forcedotcom.ui.commands.CreateCustomObjectTestStepCommand.CustomObjectName">Account</propertyValue>
      </parameterGeneratorProperties>
      <generatedParameters>
        <apiParam group="fields" modelBinding="sf:ui:binding:object?object=Account&amp;field=Name" name="Name" title="Name"/>
      </generatedParameters>
    </apiCall>
    <apiCall apiId="com.provar.plugins.forcedotcom.core.testapis.ApexCreateObject" name="ApexCreateObject" parameterGeneratorUri="command:com.provar.plugins.forcedotcom.ui.commands.CreateCustomObjectTestStepCommand" testItemId="189" title="Create Object: ServiceAppointment=&gt;ServiceAppointmentId">
      <arguments>
        <argument id="objectType">
          <value class="value" valueClass="string">ServiceAppointment</value>
        </argument>
        <argument id="resultIdName">
          <value class="value" valueClass="string">ServiceAppointmentId</value>
        </argument>
        <argument id="apexConnectionName">
          <value class="value" valueClass="string">Regtest</value>
        </argument>
        <argument id="ParentRecordId">
          <value class="variable">
            <path element="AccountId"/>
          </value>
        </argument>
        <argument id="EarliestStartTime">
          <value class="compound">
            <parts>
              <funcCall id="DateFormat">
                <argument id="date">
                  <value class="funcCall" id="DateAdd">
                    <argument id="date">
                      <value class="variable">
                        <path element="TODAY"/>
                      </value>
                    </argument>
                  </value>
                </argument>
                <argument id="outputFormat">
                  <value class="value" valueClass="string">YYYY-MM-dd</value>
                </argument>
              </funcCall>
              <value valueClass="string">T12:00:00.000Z\t</value>
            </parts>
          </value>
        </argument>
        <argument id="DueDate">
          <value class="compound">
            <parts>
              <funcCall id="DateFormat">
                <argument id="date">
                  <value class="funcCall" id="DateAdd">
                    <argument id="date">
                      <value class="variable">
                        <path element="TODAY"/>
                      </value>
                    </argument>
                  </value>
                </argument>
                <argument id="outputFormat">
                  <value class="value" valueClass="string">YYYY-MM-dd</value>
                </argument>
              </funcCall>
              <value valueClass="string">T14:0:00.000Z</value>
            </parts>
          </value>
        </argument>
        <argument id="SchedStartTime">
          <value class="compound">
            <parts>
              <funcCall id="DateFormat">
                <argument id="date">
                  <value class="funcCall" id="DateAdd">
                    <argument id="date">
                      <value class="variable">
                        <path element="TODAY"/>
                      </value>
                    </argument>
                  </value>
                </argument>
                <argument id="outputFormat">
                  <value class="value" valueClass="string">YYYY-MM-dd</value>
                </argument>
              </funcCall>
              <value valueClass="string">T12:00:00.000Z\t</value>
            </parts>
          </value>
        </argument>
        <argument id="SchedEndTime">
          <value class="compound">
            <parts>
              <funcCall id="DateFormat">
                <argument id="date">
                  <value class="funcCall" id="DateAdd">
                    <argument id="date">
                      <value class="variable">
                        <path element="TODAY"/>
                      </value>
                    </argument>
                  </value>
                </argument>
                <argument id="outputFormat">
                  <value class="value" valueClass="string">YYYY-MM-dd</value>
                </argument>
              </funcCall>
              <value valueClass="string">T14:0:00.000Z</value>
            </parts>
          </value>
        </argument>
        <argument id="assignmentRuleId"/>
        <argument id="resultScope">
          <value class="value" valueClass="string">Global</value>
        </argument>
      </arguments>
      <parameterGeneratorProperties>
        <propertyValue name="com.provar.plugins.forcedotcom.ui.commands.CreateCustomObjectTestStepCommand.ConnectionName">regtest</propertyValue>
        <propertyValue name="com.provar.plugins.forcedotcom.ui.commands.CreateCustomObjectTestStepCommand.CustomObjectName">ServiceAppointment</propertyValue>
      </parameterGeneratorProperties>
      <generatedParameters>
        <apiParam group="fields" modelBinding="sf:ui:binding:object?object=ServiceAppointment&amp;field=ParentRecordId" name="ParentRecordId" title="ParentRecordId"/>
        <apiParam group="fields" modelBinding="sf:ui:binding:object?object=ServiceAppointment&amp;field=EarliestStartTime" name="EarliestStartTime" title="EarliestStartTime"/>
        <apiParam group="fields" modelBinding="sf:ui:binding:object?object=ServiceAppointment&amp;field=DueDate" name="DueDate" title="DueDate"/>
        <apiParam group="fields" modelBinding="sf:ui:binding:object?object=ServiceAppointment&amp;field=SchedStartTime" name="SchedStartTime" title="SchedStartTime"/>
        <apiParam group="fields" modelBinding="sf:ui:binding:object?object=ServiceAppointment&amp;field=SchedEndTime" name="SchedEndTime" title="SchedEndTime"/>
      </generatedParameters>
    </apiCall>
    <apiCall apiId="com.provar.plugins.forcedotcom.core.testapis.ApexSoqlQuery" name="ApexSoqlQuery" testItemId="198" title="SOQL Query: select AppointmentNumber from ServiceAppointment where Id = '{ServiceAppointmentId}'=&gt;ServiceAppointmentRows">
      <tags/>
      <arguments>
        <argument id="soqlQuery">
          <value class="compound">
            <parts>
              <value valueClass="string">select AppointmentNumber from ServiceAppointment where Id = '</value>
              <variable>
                <path element="ServiceAppointmentId"/>
              </variable>
              <value valueClass="string">'</value>
            </parts>
          </value>
        </argument>
        <argument id="apexConnectionName">
          <value class="value" valueClass="string">Regtest</value>
        </argument>
        <argument id="resultListName">
          <value class="value" valueClass="string">ServiceAppointmentRows</value>
        </argument>
        <argument id="resultScope">
          <value class="value" valueClass="string">Test</value>
        </argument>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.forcedotcom.core.ui.UiWithScreen" name="UiWithScreen" testItemId="5" title="On SF Service Resource View screen">
      <arguments>
        <argument id="uiConnectionName">
          <value class="value" valueClass="string">Regtest</value>
        </argument>
        <argument id="target">
          <value class="uiTarget" uri="sf:ui:target?object=ServiceResource&amp;action=View&amp;noOverride=true"/>
        </argument>
        <argument id="navigate">
          <value class="value" valueClass="string">Always</value>
        </argument>
        <argument id="targetDescription">
          <value class="value" valueClass="string">On SF Service Resource View screen</value>
        </argument>
        <argument id="windowSelection">
          <value class="value" valueClass="string">Default</value>
        </argument>
        <argument id="windowSize">
          <value class="value" valueClass="string">Default</value>
        </argument>
        <argument id="closeWindow"/>
        <argument id="captureBefore">
          <value class="value" valueClass="string">false</value>
        </argument>
        <argument id="captureAfter">
          <value class="value" valueClass="string">false</value>
        </argument>
        <argument id="sfUiTargetObjectId">
          <value class="variable">
            <path element="ServiceResourceId"/>
          </value>
        </argument>
      </arguments>
      <clauses>
        <clause name="substeps" testItemId="6">
          <steps/>
        </clause>
      </clauses>
      <generatedParameters>
        <apiParam group="target" name="sfUiTargetObjectId" title="Object Id">
          <summary>The Id of the SF Object to be Viewed or Edited.</summary>
          <type>
            <textType/>
          </type>
        </apiParam>
      </generatedParameters>
    </apiCall>
  </steps>
</testCase>
