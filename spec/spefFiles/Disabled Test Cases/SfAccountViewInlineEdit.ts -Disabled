import { ExpectedResultSupport } from '../../support/ExpectedResultSupport';
const comparisonUtils: ExpectedResultSupport = new ExpectedResultSupport();
export const SfAccountViewInlineEdit = {
	accountName: {
		Xpath: "//div[normalize-space(.)='Account Name']/following-sibling::div//span",
		XpathInput: "//label/span[normalize-space(.)='Account Name']/ancestor::div/input",
		interactionParameter: {
			interactionParameter: {
				id: 'Set',
				settings: {
					value: 'Automation Account Updated'
				},
			}
		},
		executionStatus: {
			InlineEdit: [
				{
					name: 'UiDoAction',
					type: 'Icon-Successful',
					text: 'Activate inline edit the Account Name field',
					executionStatus: 'Executed',
					successfulCount: 1,
				},
			],
			Set: [
				{
					name: 'UiDoAction',
					type: 'Icon-Successful',
					text: 'Set the Account Name field to Automation Account Updated',
					executionStatus: 'Executed',
					successfulCount: 1,
				},
			],
			Assert: [
				{
					name: 'UiAssert',
					type: 'Icon-Successful',
					text: 'UI Assert',
					executionStatus: 'Executed',
					successfulCount: 1,
				},
			],
		},
		testcaseXML: {
			InlineEdit: [{
				name: ['UiDoAction'],
				title: ['Activate inline edit the Account Name field'],
				arguments: [{
					argument: comparisonUtils.addCompareOptions([{
						id: ['interaction'],
						value: [{
							uri: ['ui:interaction?name=sfIleActivate'],
						}],
					}], { partial: true, indexKey: 'id' }),
				}],
			}],
			Set: [{
				name: ['UiDoAction'],
				title: ['Set the Account Name field to Automation Account Updated'],
				arguments: [{
					argument: comparisonUtils.addCompareOptions([{
						id: ['interaction'],
						value: [{
							uri: ['ui:interaction?name=set'],
						}],
					}], { partial: true, indexKey: 'id' }),
				}],
			}],
			Assert: [{
				name: ['UiAssert'],
				title: ['UI Assert'],
				arguments: [{
					argument: comparisonUtils.addCompareOptions([{
						id: ['fieldAssertions'],
						value: [{
							uiFieldAssertion: [{
								fieldLocator: [{
									uri: ['ui:locator?name=Name&binding=sf%3Aui%3Abinding%3Aobject%3Fobject%3DAccount%26field%3DName'],
								}],
								attributeAssertions: [{
									uiAttributeAssertion: [
										{
											"attributeName": [
												"value"
											],
											"comparisonType": [
												"EqualTo"
											],
											"normalize": [
												"true"
											],
											"value": [
												{
													"text": "Automation Account Updated",
													"class": [
														"value"
													],
													"valueClass": [
														"string"
													]
												}
											]
										},
										{
											"attributeName": [
												"label"
											],
											"comparisonType": [
												"EqualTo"
											],
											"normalize": [
												"true"
											],
											"value": [
												{
													"text": "Account Name",
													"class": [
														"value"
													],
													"valueClass": [
														"string"
													]
												}
											]
										}
									]
								}]
							}],
						}],
					}], { partial: true, indexKey: 'id' }),
				}],
			}],
		}
	},
	customDate: {
		Xpath: "//div[normalize-space(.)='Custom Date']/following-sibling::div//span",
		XpathInput: "//label[normalize-space(.)='Custom Date']/following-sibling::div//input",
		interactionParameter: {
			id: 'Set',
			settings: {
				value: '2019-02-02'
			},
		},
		executionStatusInlineEdit: [],
		executionStatusSet: [],
		executionStatusAssert: [
			{
				name: 'UiAssert',
				type: 'Icon-Successful',
				text: 'UI Assert',
				executionStatus: 'Executed',
				successfulCount: 1,
			},
		],
		testcaseXMLInlineEdit: [],
		testcaseXMLSet: [],
		testCaseXMLAssert: [{
			name: ['UiAssert'],
			title: ['UI Assert'],
			arguments: [{
				argument: comparisonUtils.addCompareOptions([{
					id: ['fieldAssertions'],
					value: [{
						uiFieldAssertion: [{
							fieldLocator: [{
								uri: ['ui:locator?name=Custom_Date__c&binding=sf%3Aui%3Abinding%3Aobject%3Fobject%3DAccount%26field%3DCustom_Date__c'],
							}],
							attributeAssertions: [{
								uiAttributeAssertion: [
									{
										"attributeName": [
											"value"
										],
										"comparisonType": [
											"EqualTo"
										],
										"normalize": [
											"true"
										],
										"value": [
											{
												"text": "02/02/2019",
												"class": [
													"value"
												],
												"valueClass": [
													"string"
												]
											}
										]
									},
									{
										"attributeName": [
											"label"
										],
										"comparisonType": [
											"EqualTo"
										],
										"normalize": [
											"true"
										],
										"value": [
											{
												"text": "Custom Date",
												"class": [
													"value"
												],
												"valueClass": [
													"string"
												]
											}
										]
									}
								]
							}]
						}],
					}],
				}], { partial: true, indexKey: 'id' }),
			}],
		}],
	},
	website: {
		Xpath: "//div[normalize-space(.)='Website']/following-sibling::div//span",
		XpathInput: "//label[normalize-space(.)='Website']/following-sibling::input",
		interactionParameter: {
			id: 'Set',
			settings: {
				value: 'www.provartestingupdated.com'
			},
		},
		executionStatusInlineEdit: [],
		executionStatusSet: [],
		executionStatusAssert: [
			{
				name: 'UiAssert',
				type: 'Icon-Successful',
				text: 'UI Assert',
				executionStatus: 'Executed',
				successfulCount: 1,
			},
		],
		testcaseXMLInlineEdit: [],
		testcaseXMLSet: [],
		testCaseXMLAssert: [{
			name: ['UiAssert'],
			title: ['UI Assert'],
			arguments: [{
				argument: comparisonUtils.addCompareOptions([{
					id: ['fieldAssertions'],
					value: [{
						uiFieldAssertion: [{
							fieldLocator: [{
								uri: ['ui:locator?name=Website&binding=sf%3Aui%3Abinding%3Aobject%3Fobject%3DAccount%26field%3DWebsite'],
							}],
							attributeAssertions: [{
								uiAttributeAssertion: [
									{
										"attributeName": [
											"value"
										],
										"comparisonType": [
											"EqualTo"
										],
										"normalize": [
											"true"
										],
										"value": [
											{
												"text": "www.provartestingupdated.com",
												"class": [
													"value"
												],
												"valueClass": [
													"string"
												]
											}
										]
									},
									{
										"attributeName": [
											"label"
										],
										"comparisonType": [
											"EqualTo"
										],
										"normalize": [
											"true"
										],
										"value": [
											{
												"text": "Website",
												"class": [
													"value"
												],
												"valueClass": [
													"string"
												]
											}
										]
									}
								]
							}]
						}],
					}],
				}], { partial: true, indexKey: 'id' }),
			}],
		}],
	},
	phone: {
		Xpath: "//div[normalize-space(.)='Phone']/following-sibling::div//span",
		XpathInput: "//label[normalize-space(.)='Phone']/following-sibling::input",
		interactionParameter: {
			id: 'Set',
			settings: {
				value: '9988777788'
			},
		},
		executionStatusInlineEdit: [],
		executionStatusSet: [],
		executionStatusAssert: [
			{
				name: 'UiAssert',
				type: 'Icon-Successful',
				text: 'UI Assert',
				executionStatus: 'Executed',
				successfulCount: 1,
			},
		],
		testcaseXMLInlineEdit: [],
		testcaseXMLSet: [],
		testCaseXMLAssert: [{
			name: ['UiAssert'],
			title: ['UI Assert'],
			arguments: [{
				argument: comparisonUtils.addCompareOptions([{
					id: ['fieldAssertions'],
					value: [{
						uiFieldAssertion: [{
							fieldLocator: [{
								uri: ['ui:locator?name=Phone&binding=sf%3Aui%3Abinding%3Aobject%3Fobject%3DAccount%26field%3DPhone'],
							}],
							attributeAssertions: [{
								uiAttributeAssertion: [
									{
										"attributeName": [
											"value"
										],
										"comparisonType": [
											"EqualTo"
										],
										"normalize": [
											"true"
										],
										"value": [
											{
												"text": "9988776655",
												"class": [
													"value"
												],
												"valueClass": [
													"string"
												]
											}
										]
									},
									{
										"attributeName": [
											"label"
										],
										"comparisonType": [
											"EqualTo"
										],
										"normalize": [
											"true"
										],
										"value": [
											{
												"text": "Phone",
												"class": [
													"value"
												],
												"valueClass": [
													"string"
												]
											}
										]
									}
								]
							}]
						}],
					}],
				}], { partial: true, indexKey: 'id' }),
			}],
		}],
	},
	approved: {
		Xpath: "//div[normalize-space(.)='Approved']/following-sibling::div//span",
		XpathInput: "//label[normalize-space(.)='Approved']/following-sibling::input",
		interactionParameter: {
			id: 'Check',
			settings: {
				value: true
			},
		},
		executionStatusInlineEdit: [],
		executionStatusSet: [],
		executionStatusAssert: [
			{
				name: 'UiAssert',
				type: 'Icon-Successful',
				text: 'UI Assert',
				executionStatus: 'Executed',
				successfulCount: 1,
			},
		],
		testcaseXMLInlineEdit: [],
		testcaseXMLSet: [],
		testCaseXMLAssert: [{
			name: ['UiAssert'],
			title: ['UI Assert'],
			arguments: [{
				argument: comparisonUtils.addCompareOptions([{
					id: ['fieldAssertions'],
					value: [{
						uiFieldAssertion: [{
							fieldLocator: [{
								uri: ['ui:locator?name=ProvarQS__Approved__c&binding=sf%3Aui%3Abinding%3Aobject%3Fobject%3DAccount%26field%3DProvarQS__Approved__c'],
							}],
							attributeAssertions: [{
								uiAttributeAssertion: [
									{
										"attributeName": [
											"value"
										],
										"comparisonType": [
											"EqualTo"
										],
										"normalize": [
											"true"
										],
										"value": [
											{
												"text": "true",
												"class": [
													"value"
												],
												"valueClass": [
													"string"
												]
											}
										]
									},
									{
										"attributeName": [
											"label"
										],
										"comparisonType": [
											"EqualTo"
										],
										"normalize": [
											"true"
										],
										"value": [
											{
												"text": "Approved",
												"class": [
													"value"
												],
												"valueClass": [
													"string"
												]
											}
										]
									}
								]
							}]
						}],
					}],
				}], { partial: true, indexKey: 'id' }),
			}],
		}],
	},
	description: {
		Xpath: "//div[normalize-space(.)='Description']/following-sibling::div//span",
		XpathInput: "//label[normalize-space(.)='Description']/following-sibling::textarea",
		interactionParameter: {
			id: 'Set',
			settings: {
				value: 'Updating the description'
			},
		},
		executionStatusInlineEdit: [],
		executionStatusSet: [],
		executionStatusAssert: [
			{
				name: 'UiAssert',
				type: 'Icon-Successful',
				text: 'UI Assert',
				executionStatus: 'Executed',
				successfulCount: 1,
			},
		],
		testcaseXMLInlineEdit: [],
		testcaseXMLSet: [],
		testCaseXMLAssert: [{
			name: ['UiAssert'],
			title: ['UI Assert'],
			arguments: [{
				argument: comparisonUtils.addCompareOptions([{
					id: ['fieldAssertions'],
					value: [{
						uiFieldAssertion: [{
							fieldLocator: [{
								uri: ['ui:locator?name=Description&binding=sf%3Aui%3Abinding%3Aobject%3Fobject%3DAccount%26field%3DDescription'],
							}],
							attributeAssertions: [{
								uiAttributeAssertion: [
									{
										"attributeName": [
											"value"
										],
										"comparisonType": [
											"EqualTo"
										],
										"normalize": [
											"true"
										],
										"value": [
											{
												"text": "Updating the description",
												"class": [
													"value"
												],
												"valueClass": [
													"string"
												]
											}
										]
									},
									{
										"attributeName": [
											"label"
										],
										"comparisonType": [
											"EqualTo"
										],
										"normalize": [
											"true"
										],
										"value": [
											{
												"text": "Description",
												"class": [
													"value"
												],
												"valueClass": [
													"string"
												]
											}
										]
									}
								]
							}]
						}],
					}],
				}], { partial: true, indexKey: 'id' }),
			}],
		}],
	},
	annualRevenue: {
		Xpath: "//div[normalize-space(.)='Annual Revenue']/following-sibling::div//span",
		XpathInput: "//label[normalize-space(.)='Annual Revenue']/following-sibling::input",
		interactionParameter: {
			id: 'Set',
			settings: {
				value: '18,423,458'
			},
		},
		executionStatusInlineEdit: [],
		executionStatusSet: [],
		executionStatusAssert: [
			{
				name: 'UiAssert',
				type: 'Icon-Successful',
				text: 'UI Assert',
				executionStatus: 'Executed',
				successfulCount: 1,
			},
		],
		testcaseXMLInlineEdit: [],
		testcaseXMLSet: [],
		testCaseXMLAssert: [{
			name: ['UiAssert'],
			title: ['UI Assert'],
			arguments: [{
				argument: comparisonUtils.addCompareOptions([{
					id: ['fieldAssertions'],
					value: [{
						uiFieldAssertion: [{
							fieldLocator: [{
								uri: ['ui:locator?name=AnnualRevenue&binding=sf%3Aui%3Abinding%3Aobject%3Fobject%3DAccount%26field%3DAnnualRevenue'],
							}],
							attributeAssertions: [{
								uiAttributeAssertion: [
									{
										"attributeName": [
											"value"
										],
										"comparisonType": [
											"EqualTo"
										],
										"normalize": [
											"true"
										],
										"value": [
											{
												"text": "£18,423,458",
												"class": [
													"value"
												],
												"valueClass": [
													"string"
												]
											}
										]
									},
									{
										"attributeName": [
											"label"
										],
										"comparisonType": [
											"EqualTo"
										],
										"normalize": [
											"true"
										],
										"value": [
											{
												"text": "Annual Revenue",
												"class": [
													"value"
												],
												"valueClass": [
													"string"
												]
											}
										]
									}
								]
							}]
						}],
					}],
				}], { partial: true, indexKey: 'id' }),
			}],
		}],
	},
	billingAddress: {
		Xpath: "//div[normalize-space(.)='Billing Address']/following-sibling::div//span/a",
		XpathInput: "//label[normalize-space(.)='Shipping Street']/following-sibling::textarea",
		interactionParameter: {
			id: 'Set',
			settings: {
				value: 'Block-008'
			},
		},
		executionStatusInlineEdit: [],
		executionStatusSet: [],
		executionStatusAssert: [
			{
				name: 'UiAssert',
				type: 'Icon-Successful',
				text: 'UI Assert',
				executionStatus: 'Executed',
				successfulCount: 1,
			},
		],
		testcaseXMLInlineEdit: [],
		testcaseXMLSet: [{
			name: ['UiDoAction'],
			title: ['Set By Index the Case Origin picklist to 4'],
			arguments: [{
				argument: comparisonUtils.addCompareOptions([{
					id: ['interaction'],
					value: [{
						uri: ['ui:interaction?name=setByIndex'],
					}],
				}], { partial: true, indexKey: 'id' }),
			}],
		}],
		testCaseXMLAssert: [{
			name: ['UiAssert'],
			title: ['UI Assert'],
			arguments: [{
				argument: comparisonUtils.addCompareOptions([{
					id: ['fieldAssertions'],
					value: [{
						uiFieldAssertion: [{
							fieldLocator: [{
								uri: ['ui:locator?name=BillingAddress&binding=sf%3Aui%3Abinding%3Aobject%3Fobject%3DAccount%26field%3DBillingAddress'],
							}],
							attributeAssertions: [{
								uiAttributeAssertion: [
									{
										"attributeName": [
											"value"
										],
										"comparisonType": [
											"EqualTo"
										],
										"normalize": [
											"true"
										],
										"value": [
											{
												"text": "Block-008\nDelhi\nIndia",
												"class": [
													"value"
												],
												"valueClass": [
													"string"
												]
											}
										]
									},
									{
										"attributeName": [
											"label"
										],
										"comparisonType": [
											"EqualTo"
										],
										"normalize": [
											"true"
										],
										"value": [
											{
												"text": "Billing Address",
												"class": [
													"value"
												],
												"valueClass": [
													"string"
												]
											}
										]
									}
								]
							}]
						}],
					}],
				}], { partial: true, indexKey: 'id' }),
			}],
		}],
	},
	saveEditButton: {
		Xpath: "//button[@title='Save']",
		executionStatus: [
			{
				name: 'UiDoAction',
				type: 'Icon-Successful',
				text: 'Click the Save button',
				executionStatus: 'Executed',
				successfulCount: 1,
			},
		],
		testCaseXML: [{
			name: ['UiDoAction'],
			title: ['Click the Save button'],
			arguments: [{
				argument: comparisonUtils.addCompareOptions([{
					id: ['interaction'],
					value: [{
						uri: ['ui:interaction?name=action'],
					}],
				}], { partial: true, indexKey: 'id' }),
			}],
		}],
	},
};